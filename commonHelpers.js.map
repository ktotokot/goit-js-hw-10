{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nlet userSelectedDate;\nconst inputEl = document.querySelector('#datetime-picker');\nconst buttonEl = document.querySelector('[data-start]');\nbuttonEl.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      iziToast.show({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      buttonEl.disabled = true;\n    } else {\n      buttonEl.disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\ninputEl.addEventListener('input', event => {\n  userSelectedDate = event.target.value;\n});\n\nbuttonEl.addEventListener('click', () => {\n  const days = document.querySelector('[data-days]');\n  const hours = document.querySelector('[data-hours]');\n  const minutes = document.querySelector('[data-minutes]');\n  const seconds = document.querySelector('[data-seconds]');\n\n  buttonEl.disabled = true;\n  inputEl.disabled = true;\n\n  const intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    const diff = userSelectedDate - currentTime;\n    const objTime = convertMs(diff);\n\n    days.textContent = objTime.days.toString().padStart(2, '0');\n    hours.textContent = objTime.hours.toString().padStart(2, '0');\n    minutes.textContent = objTime.minutes.toString().padStart(2, '0');\n    seconds.textContent = objTime.seconds.toString().padStart(2, '0');\n\n    if (diff <= 0) {\n      clearInterval(intervalId);\n      inputEl.disabled = false;\n    }\n  }, 1000);\n\n  setTimeout(() => {\n    clearInterval(intervalId);\n    inputEl.disabled = false;\n  }, userSelectedDate - Date.now());\n});"],"names":["convertMs","ms","days","hours","minutes","seconds","userSelectedDate","inputEl","buttonEl","options","selectedDates","iziToast","flatpickr","event","intervalId","currentTime","diff","objTime"],"mappings":"2GAMA,SAASA,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,IAAIC,EACJ,MAAMC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,SAAW,GAEpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,KAAK,IAAG,GAC7BC,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,oCACjB,CAAO,EACDH,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBF,EAAmBI,EAAc,CAAC,EAErC,CACH,EAEAE,EAAUL,EAASE,CAAO,EAE1BF,EAAQ,iBAAiB,QAASM,GAAS,CACzCP,EAAmBO,EAAM,OAAO,KAClC,CAAC,EAEDL,EAAS,iBAAiB,QAAS,IAAM,CACvC,MAAMN,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEvDG,EAAS,SAAW,GACpBD,EAAQ,SAAW,GAEnB,MAAMO,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAc,KAAK,MACnBC,EAAOV,EAAmBS,EAC1BE,EAAUjB,EAAUgB,CAAI,EAE9Bd,EAAK,YAAce,EAAQ,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC1Dd,EAAM,YAAcc,EAAQ,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC5Db,EAAQ,YAAca,EAAQ,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChEZ,EAAQ,YAAcY,EAAQ,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAE5DD,GAAQ,IACV,cAAcF,CAAU,EACxBP,EAAQ,SAAW,GAEtB,EAAE,GAAI,EAEP,WAAW,IAAM,CACf,cAAcO,CAAU,EACxBP,EAAQ,SAAW,EACpB,EAAED,EAAmB,KAAK,IAAG,CAAE,CAClC,CAAC"}